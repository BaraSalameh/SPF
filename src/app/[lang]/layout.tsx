import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "@/styles/globals.css";
import { ThemeProvider } from 'next-themes';
import { notFound } from "next/navigation";
import { Language } from "@/components/types";

const geistSans = Geist({
    variable: "--font-geist-sans",
    subsets: ["latin"],
});

const geistMono = Geist_Mono({
    variable: "--font-geist-mono",
    subsets: ["latin"],
});

export const metadata: Metadata = {
    title: "Create Next App",
    description: "Generated by create next app",
};

const supportedLangs = ['en', 'ar', 'tr'];

const PortfolioLayout = async ({children, params}: Readonly<{children: React.ReactNode; params: {lang: Language};}>) => {
    const { lang } = await params;
    
    if (!supportedLangs.includes(lang)) {
        notFound();
    }

    const dir = lang === 'ar' ? 'rtl' : 'ltr';
    
    return (
        <html lang={lang} dir={dir} suppressHydrationWarning>
            <body className={`bg-light-background dark:bg-dark-background ${geistSans.variable} ${geistMono.variable}`}>
                <ThemeProvider attribute="class" defaultTheme="system" enableSystem>
                    <main>{children}</main>
                </ThemeProvider>
            </body>
        </html>
    )
}

export default PortfolioLayout;